# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
    # Runs on pushes targeting the default branch
    push:
        branches: ["main"]

    # Allows you to run this workflow manually from the Actions tab
    workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
    contents: read
    pages: write
    id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
    group: "pages"
    cancel-in-progress: false

jobs:
    # Single deploy job since we're just deploying
    deploy:
        environment:
            name: github-pages
            url: ${{ steps.deployment.outputs.page_url }}
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            - name: Setup Pages
              uses: actions/configure-pages@v5
            - name: Upload artifact
              uses: actions/upload-pages-artifact@v3
              with:
                  # Upload entire repository
                  path: "docs"
            - name: Deploy to GitHub Pages
              id: deployment
              uses: actions/deploy-pages@v4
    analyze:
        runs-on: ubuntu-latest
        timeout-minutes: 9
        permissions:
            actions: read
            contents: read
            security-events: write

        strategy:
            fail-fast: false

        steps:
            - name: Checkout repository
              uses: actions/checkout@v3

            # Initializes the CodeQL tools for scanning.
            - name: Initialize CodeQL
              uses: github/codeql-action/init@v3
              with:
                  languages: "javascript"
                  # If you wish to specify custom queries, you can do so here or in a config file.
                  # By default, queries listed here will override any specified in a config file.
                  # Prefix the list here with "+" to use these queries and those in the config file.

                  # Details on CodeQL's query packs refer to : https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs
                  # queries: security-extended,security-and-quality

            # Autobuild attempts to build any compiled languages  (C/C++, C#, or Java).
            # If this step fails, then you should remove it and run the build manually (see below)
            - name: Autobuild
              uses: github/codeql-action/autobuild@v3

            # ‚ÑπÔ∏è Command-line programs to run using the OS shell.
            # üìö See https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idstepsrun

            #   If the Autobuild fails above, remove it and uncomment the following three lines.
            #   modify them (or add more) to build your code if your project, please refer to the EXAMPLE below for guidance.

            # - run: |
            #   echo "Run, Build Application using script"
            #   ./location_of_script_within_repo/buildscript.sh

            - name: Perform CodeQL Analysis
              uses: github/codeql-action/analyze@v3
    build:
        runs-on: ubuntu-latest
        timeout-minutes: 9
        steps:
            - uses: actions/checkout@v3

            - name: run install
              run: npm ci

            - name: run tests
              run: npm run test

            - name: tests passed
              if: ${{ success() }}
              run: echo tests passed

            - name: tests failed
              if: ${{ failure() }}
              run: echo tests failed
